{
  "name": "fast-eslint-8",
  "version": "5.1.1",
  "license": "MIT",
  "description": "ESLint v8.x linter plugin for JavaScript, based on fast-eslint",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "keywords": [
    "atom",
    "javascript",
    "linter",
    "lint",
    "eslint",
    "airbnb",
    "standard",
    "google",
    "xo"
  ],
  "main": "lib/index.js",
  "activationCommands": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/db-developer/fast-eslint-8.git"
  },
  "homepage": "https://github.com/db-developer/fast-eslint-8#readme",
  "author": "Copied from Arnaud Dezandee <dezandee.arnaud@gmail.com> (https://github.com/arnaud-dezandee)",
  "contributors": [
    {
      "name": "Dirk Brenckmann",
      "email": "db.developer@gmx.de"
    }
  ],
  "configSchema": {
    "baseconfig": {
      "title": "Base Config",
      "description": "Adding values to any property of this group, will result in creating a 'base config' which is passed to ESLint Engine Options (the group below).",
      "type": "object",
      "properties": {
        "extends": {
          "title": "Extends",
          "description": "List of ESLint shareable config names. See [shareable configs](http://eslint.org/docs/developer-guide/shareable-configs). Those will be used as *baseConfig.extends*. Example: **standard, standard-react**",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "eslintopts": {
      "title": "ESLint Engine Options",
      "description": "See [ESLint options](https://eslint.org/docs/developer-guide/nodejs-api#-new-eslintoptions)",
      "type": "object",
      "properties": {
        "cwd": {
          "title": "cwd",
          "description": "The [c]urrent [w]orking [d]irectory, which must be an absolute path and defaults to [process.cwd()](https://nodejs.org/api/process.html#processcwd)",
          "type": "string",
          "default": "",
          "order": 1
        },
        "allowInlineConfig": {
          "title": "Allow inline configuration",
          "description": " If false, ESLint suppresses directive comments in source code and it overrides the noInlineConfig settings in your configurations.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "overrideConfigFile": {
          "title": ".eslintrc.* override file.",
          "description": "One configuration file, to rule them all (overrides all other files).",
          "type": "string",
          "default": "",
          "order": 3
        },
        "reportUnusedDisableDirectives ": {
          "title": "Report unused disable directives",
          "description": "The severity to report unused eslint-disable directives. If set, it overrides namelike settings in your configurations.",
          "type": "string",
          "default": "",
          "enum": [
            {
              "value": "error",
              "description": "severity: error"
            },
            {
              "value": "warn",
              "description": "severity: warn"
            },
            {
              "value": "off",
              "description": "severity: off"
            },
            {
              "value": "",
              "description": "not set"
            }
          ],
          "order": 4
        },
        "rulePaths": {
          "title": "Custom rule directories",
          "description": "An array of additional directories (rule paths), to load custom rules from.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 5
        },
        "useEslintrc": {
          "title": "Use .eslintrc.* files",
          "description": "Automatically load and use configuration files, that can be found in default locations.",
          "type": "boolean",
          "default": true,
          "order": 6
        }
      }
    },
    "grammarScopes": {
      "title": "Grammar scopes",
      "description": "Run `Editor: Log Cursor Scope` to determine file scopes.",
      "type": "array",
      "default": [
        "source.js",
        "source.jsx",
        "source.es6",
        "source.js.jsx",
        "source.babel",
        "source.js-semantic"
      ],
      "items": {
        "type": "string"
      }
    }
  },
  "dependencies": {
    "atom-linter": "^10.0.0",
    "atom-package-deps": "^8.0.0",
    "eslint": "^8.9.0",
    "loophole": "1.1.0"
  },
  "devDependencies": {
    "@semantic-release/apm-config": "8.0.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-plugin-import": "2.22.1",
    "semantic-release": "17.1.2"
  },
  "package-deps": [
    {
      "name": "linter-ui-default",
      "minimumVersion": "3.3.1"
    },
    {
      "name": "linter",
      "minimumVersion": "3.0.0"
    }
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "release": {
    "extends": "@semantic-release/apm-config"
  }
}
